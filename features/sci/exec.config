#!/usr/bin/env bash
set -Eeuo pipefail

# Undo the gardener feature disablement
systemctl enable ssh

# UID taken from sles 15, looks like it runs as root in debian/gardenlinux
adduser --uid 476 openvswitch \
  --system --group --no-create-home --disabled-password --disabled-login

adduser root openvswitch # Otherwise does not want to run as root:openvswitch

function create() {
  NAME=$1
  shift
  ID=$1
  shift
  adduser --uid $ID --home /var/lib/$NAME $NAME \
    --system --group --disabled-password --disabled-login
  echo "$@"
  for group in "$@"; do
    adduser $NAME $group
  done
}

create openstack 42424
create neutron 42435 openvswitch
create nova 42436 libvirt openvswitch
create kvm-node-agent 42438 libvirt

chsh -s /bin/bash nova
mkdir -p /var/lib/nova/{.ssh,instances,mnt}
chown -R nova:libvirt-qemu /var/lib/nova/{.ssh,instances,mnt}
chmod 0600 /var/lib/nova/.ssh

mkdir -p /etc/pki/CA /etc/pki/libvirt /etc/pki/qemu
chown kvm-node-agent:kvm-node-agent /etc/pki/CA /etc/pki/libvirt /etc/pki/qemu
chmod 0755 /etc/pki/CA /etc/pki/libvirt /etc/pki/qemu

# limit vnc port autorange to possible kubernetes nodeports
sed -i 's/#remote_display_port_min = 5900/remote_display_port_min = 32200/' /etc/libvirt/qemu.conf
sed -i 's/#remote_display_port_max = 65535/remote_display_port_max = 32299/' /etc/libvirt/qemu.conf

# gh release download --dir "$TEMP_DEB" --repo "$repo" "$tag"
function install_package() {
  TEMP_DEB_DIR=$(mktemp -d)
  trap 'rm -rf "$TEMP_DEB_DIR"' EXIT

  local repo="$1"
  local tag="$2"
  local arch="$3"
  shift 3
  local deb_files="$@"

  urls=$(curl -s "https://api.github.com/repos/${repo}/releases/tags/$tag" | jq -r '.assets.[].browser_download_url' | grep "build.tar.xz")
  for url in $urls; do
    echo "Downloading $url"
    (cd "$TEMP_DEB_DIR" && curl -OL "$url")
  done

  cat "$TEMP_DEB_DIR"/build.tar.xz* | xz -d | tar -C "$TEMP_DEB_DIR" -x
  ls -la "$TEMP_DEB_DIR"

  # check if requested packages are there
  for package in $deb_files; do
    if [ ! -f "$TEMP_DEB_DIR/${package}" ]; then
      echo "Package '$package' not found"
      exit 1
    fi
  done

  # create on variable to install the packages
  local package_list=""
  for package in $deb_files; do
    package_list+="$TEMP_DEB_DIR/$package "
  done

  echo "Installing packages: $package_list"
  # Install the packages
  DEBIAN_FRONTEND=noninteractive apt install -y $package_list

  # Hold the package to prevent it from being removed or upgraded
  for package in "$@"; do
    pkg=$(echo "$package" | sed 's/_.*$//') # Remove version suffix
    echo "Holding package: $pkg"
    apt-mark hold "${pkg}"
  done
}

arch="$(dpkg --print-architecture)"

# # Install cloud-hypervisor-gl package
# install_package "gardenlinux/package-cloud-hypervisor-gl" "46.0-4gl0" "$arch" "cloud-hypervisor-gl" 
# ${package}_${tag}_${arch}.deb
# 
# # Install edk2-cloud-hypervisor-gl package
# install_package "gardenlinux/package-edk2-cloud-hypervisor-gl" "20250503-2gl0" "$arch" "edk2-cloud-hypervisor-gl"
# ${package}_${tag}_${arch}.deb

# Install libvirt-daemon-driver-ch-gl package
VER="11.3.0-12gl0"
dpkg-query -f '${binary:Package}\n' -W | grep libvirt > libvirt-packages.list
while IFS=: read -r P A
do T="${P}_${VER}_${A:-all}.deb"; [ -e "$T" ] || T="${P}_${VER}_amd64.deb"; echo "$T"
done < libvirt-packages.list | tee libvirt-package-files.list

# match line with libvirt-daemon-config-network and replce in that line amd64 with all
sed -i '/^libvirt-daemon-config-network/ s/amd64/all/' libvirt-package-files.list
sed -i '/^libvirt-daemon-config-nwfilter/ s/amd64/all/' libvirt-package-files.list

cat libvirt-package-files.list

install_package "gardenlinux/package-libvirt" "$VER" "$arch" $(<libvirt-package-files.list)
