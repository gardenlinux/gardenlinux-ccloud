name: upload to OCI
on:
  workflow_call:
    inputs:
      version:
        type: string
        default: today
jobs:
  generate_matrix_publish:
    name: Generate flavors matrix to publish
    uses: gardenlinux/gardenlinux/.github/workflows/build_flavors_matrix.yml@d9625e7e1dfbeb69952dd9efee7e7f21235f25c6
    with:
      flags: '--exclude "bare-*" --no-arch --json-by-arch --build --test'
  upload_gl_artifacts_to_oci:
    name: upload to OCI
    needs: [ generate_matrix_publish ]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
      packages: write
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix: ${{ fromJson(needs.generate_matrix_publish.outputs.matrix) }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # pin@v4.1.1
        with:
          submodules: 'true'
      - uses: oras-project/setup-oras@v1
      - run: oras version
      - name: Install python-gardenlinux-lib
        uses: gardenlinux/python-gardenlinux-lib/.github/actions/setup@a7545af15d3a1fa96675b24807eace643483da96 # pin@0.8.0
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.1
        with:
          cosign-release: 'v2.4.1'
      # bin/garden-version reads and writes from and to ./VERSION which is read by ./build --resolve-cname
      - name: Set flavor version reference
        run: |
          git rev-parse HEAD | cut -c1-8 | tee COMMIT
          echo "${{ inputs.version }}" | tee VERSION
      - name: Set CNAME
        run: |
          echo "CNAME=$(gl-features-parse --cname ${{ matrix.flavor }}-${{ matrix.arch }} cname)" | tee -a "$GITHUB_ENV"
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # pin@v4.1.8
        with:
          name: build-${{ matrix.flavor }}-${{ matrix.arch }}
      - name: Push using the glcli util
        env:
          GL_CLI_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GL_CLI_REGISTRY_USERNAME: ${{ github.repository_owner }}
        run: |
          mkdir "$CNAME" manifests

          tar -C "$CNAME" -xzf "$CNAME.tar.gz"

          gl-oci push-manifest \
            --dir ${CNAME} \
            --container "ghcr.io/${{ github.repository }}" \
            --arch ${{ matrix.arch }} \
            --version ${{ inputs.version }} \
            --cname ${CNAME} \
            --cosign_file digest \
            --manifest_file "manifests/oci_manifest_entry_${CNAME}.json"
      - name: Add additional semver tag
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | oras login -u ${{ github.repository_owner }} --password-stdin ghcr.io
          oras tag ghcr.io/${{ github.repository }}:${{ inputs.version }}-${CNAME}-${{ matrix.arch }} ${{ inputs.version }}.0-${CNAME//_/-}-${{ matrix.arch }}
      - name: Upload oci manifest artifact
        uses: actions/upload-artifact@v4
        with:
          name: oci_manifest_entry_${{ env.CNAME }}.json
          path: manifests/
      - name: Output digest to be signed
        run: |
          cat digest

  upload_manifests_entries:
    needs: "upload_gl_artifacts_to_oci"
    name: upload manifest entries into OCI index
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    permissions:
      id-token: write
      packages: write
      actions: write
    steps:
      - name: Install python-gardenlinux-lib
        uses: gardenlinux/python-gardenlinux-lib/.github/actions/setup@a7545af15d3a1fa96675b24807eace643483da96 # pin@0.8.0
      - name: Download OCI manifest artifacts
        uses: actions/download-artifact@v4
        with:
          path: manifests
          pattern: oci_manifest_entry_*
          merge-multiple: true
      - name: Update index using glcli tool
        env:
          GL_CLI_REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GL_CLI_REGISTRY_USERNAME: ${{ github.repository_owner }}
        run: |
          gl-oci update-index \
            --container "ghcr.io/${{ github.repository }}" \
            --version ${{ inputs.version }} \
            --manifest_folder manifests
      - name: Delete temporary OCI manifest entry files
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            for (const artifact of artifacts.data.artifacts) {
              if (artifact.name.startsWith('oci_manifest_entry_')) {
                console.log(`Deleting artifact: ${artifact.name}`);
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
                console.log(`Successfully deleted artifact: ${artifact.name}`);
              }
            }
